source('~/Documents/Development/mobilesoft-2021-replication-package/DataAnalysis-RQ2.R', echo=TRUE)
# treatment: even-----------------------------------------------------------------------------------
setwd("./rq2_result/even")
files = list.files(pattern="*.csv")
energyCon = list()
for (i in 1:length(files)) {
print(i)
myfile = read.csv(files[i])
energyCon[i] = (sum(myfile[2],na.rm = TRUE)/lengths(myfile[1]))/1000000*5*60
}
df_even <- data.frame(energy_consumption = unlist(energyCon))
# descriptive statistics
summary(df_burst)
library(ggplot2)
# histogram
ggplot(df_even, aes(energy_consumption)) + geom_histogram(bins = 30)+
labs(x = "energy consumption")
# dealing with the whole set-----------------------------------------------------------------------
df_burst <- data.frame(energy_consumption = df_burst[c(1 : 40),])
df_burst <- cbind(df_burst, data.frame(treatment = 'burst'))
df_even <- cbind(df_even, data.frame(treatment = 'even'))
df <- rbind(df_even, df_burst)
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot()
# assumption checking-------------------------------------------------------------------------------
# if normal distribution
qqnorm(df_burst$energy_consumption)
shapiro.test(df_burst$energy_consumption)
qqnorm(df_even$energy_consumption)
shapiro.test(df_even$energy_consumption)
# homogeneity of variances
library(stats)
fligner.test(energy_consumption ~ treatment, df)
# hypothesis test ----------------------------------------------------------------------------------
#wilcox.test(df_even$energy_consumption, df_burst$energy_consumption, paired=TRUE, conf.int=TRUE)
wilcox.test(df_even$energy_consumption, df_burst$energy_consumption, paired=FALSE, conf.int=TRUE)
# effect size
library(effsize)
cliff.delta(df_even$energy_consumption, df_burst$energy_consumption)
# density
plot(density(df_burst$energy_consumption), main = "",)
lines(density(df_even$energy_consumption), col = "red")
legend("topright",
legend = c("burst", "even"),
col = c("black", "red"),
lty = 1)
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot()
source('~/Documents/Development/mobilesoft-2021-replication-package/DataAnalysis-RQ2.R', echo=TRUE)
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment, theme = theme_pubr())) + geom_boxplot()
install.packages("ggpubr")
library("ggpubr")
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment, theme = theme_pubr())) + geom_boxplot()
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot()
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot() + theme_pubr()
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot() + theme_pubr() + theme(legend.position = "none")
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot() + theme_pubr() + theme(legend.position = "none") + labs(x="Distribution of arrival", y="Energy consumption") +
# assumption checking-------------------------------------------------------------------------------
# if normal distribution
qqnorm(df_burst$energy_consumption)
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot() + theme_pubr() + theme(legend.position = "none") + labs(x="Distribution of arrival", y="Energy consumption") +
# assumption checking-------------------------------------------------------------------------------
# if normal distribution
qqnorm(df_burst$energy_consumption)
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot() + theme_pubr() + theme(legend.position = "none") + labs(x="Distribution of arrival", y="Energy consumption")
names(df)
levels(df$treatment)
levels(as.factor(df$treatment))
df$treatment <- factor(df$treatment, levels = c("Burst", "Even"))
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot() + theme_pubr() + theme(legend.position = "none") + labs(x="Distribution of arrival", y="Energy consumption")
df$treatment
setwd("./rq2_result/even")
files = list.files(pattern="*.csv")
energyCon = list()
for (i in 1:length(files)) {
print(i)
myfile = read.csv(files[i])
energyCon[i] = (sum(myfile[2],na.rm = TRUE)/lengths(myfile[1]))/1000000*5*60
}
df_even <- data.frame(energy_consumption = unlist(energyCon))
# descriptive statistics
summary(df_burst)
library(ggplot2)
# histogram
ggplot(df_even, aes(energy_consumption)) + geom_histogram(bins = 30)+
labs(x = "energy consumption")
# dealing with the whole set-----------------------------------------------------------------------
df_burst <- data.frame(energy_consumption = df_burst[c(1 : 40),])
df_burst <- cbind(df_burst, data.frame(treatment = 'burst'))
df_even <- cbind(df_even, data.frame(treatment = 'even'))
df <- rbind(df_even, df_burst)
# box-plot
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot() + theme_pubr() + theme(legend.position = "none") + labs(x="Distribution of arrival", y="Energy consumption")
# assumption checking-------------------------------------------------------------------------------
# if normal distribution
qqnorm(df_burst$energy_consumption)
shapiro.test(df_burst$energy_consumption)
qqnorm(df_even$energy_consumption)
shapiro.test(df_even$energy_consumption)
# homogeneity of variances
library(stats)
fligner.test(energy_consumption ~ treatment, df)
# hypothesis test ----------------------------------------------------------------------------------
#wilcox.test(df_even$energy_consumption, df_burst$energy_consumption, paired=TRUE, conf.int=TRUE)
wilcox.test(df_even$energy_consumption, df_burst$energy_consumption, paired=FALSE, conf.int=TRUE)
# effect size
library(effsize)
cliff.delta(df_even$energy_consumption, df_burst$energy_consumption)
# density
plot(density(df_burst$energy_consumption), main = "",)
lines(density(df_even$energy_consumption), col = "red")
legend("topright",
legend = c("burst", "even"),
col = c("black", "red"),
lty = 1)
ggplot(data = df, aes(x = treatment, y = energy_consumption, color = treatment)) + geom_boxplot() + theme_pubr() + theme(legend.position = "none") + labs(x="Distribution of arrival", y="Energy consumption")
source('~/Documents/Development/mobilesoft-2021-replication-package/DataAnalysis-RQ2.R', echo=TRUE)
energyCon = list()
